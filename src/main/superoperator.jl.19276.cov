        - function superoperator(command, logicset::LogicalCombo; verbose=true)
       60     counter!()
        - 
       30     logicsetcopy = deepcopy(logicset)
        - 
        -     superset = "xor|iff|if|or|and|notthen|then"
        - 
        -     #println("operatoreval($command)")
       30     (sum(logicset[:]) == 0) && return logicset
       30     !occursin(Regex("(\b| )([><=|!+\\-^&]{3}|$superset)(\b| )"), command) &&
        -       return operatoreval(command, logicset, verbose=verbose)
        9     occursin(r"\{\{.*\}\}", command) &&
        -       return operatorspawn(command, logicset, verbose=verbose)
        - 
        9     m = match(Regex("(^.*)(?:\b| )([><=|!+\\-\\^&]{3}|$superset)(?:\b| )(.*?\$)"), command)
       18     left, operator, right = m.captures
        - 
        9     ℧left  = superoperator(left ,logicset, verbose=verbose)[:]
        5     ℧right = superoperator(right,logicset, verbose=verbose)[:]
        - 
        5     ℧ = logicset[:]
        5     ℧η = deepcopy(℧)
        - 
        5     if operator ∈ ["&&&", "and"]
        5         ℧η = ℧ .& (℧left .& ℧right)
        - 
        0     elseif operator ∈ ["^^^" , "xor", "!=="]
        0         ℧η = ℧ .& ((℧left .& .!℧right) .| (.!℧left .& ℧right))
        - 
        -     # this can be dangerous, false equal to false such as with previous exclusions will cause inconsistencies
        0     elseif operator ∈ ["<=>","===", "iff"]
        0         ℧η = ℧ .& (℧left .== ℧right)
        - 
        0     elseif operator ∈ ["|||", "or"]
        0         ℧η = ℧ .& (℧left .| ℧right)
        - 
        0     elseif operator ∈ ["==>", "then"]
        0         ℧η[℧left] .= ℧[℧left]  .& ℧right[℧left]
        - 
        0     elseif operator ∈ ["!=>"]
        0         ℧η[.!℧left] .= ℧[.!℧left]  .& ℧right[.!℧left]
        - 
        0     elseif operator ∈ ["<==", "if"]
        0         ℧η[℧right] = ℧[℧right] .& ℧left[℧right]
        - 
        -     end
        - 
        5     logicsetcopy[:] = ℧η
        5     logicsetcopy
        - end
        - 
