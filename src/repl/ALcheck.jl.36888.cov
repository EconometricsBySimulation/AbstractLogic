        - function ALcheck(userinput; verbose=true)
        0     try
        0       inputpass = string(replace(userinput, r"^(check|prove|all|any|✓)[\\:\\-\\ ]*"=>""))
        0       occursin(r"^(check|✓)[\\:\\-\\ ]+", userinput) &&
        -         checkfeasible(inputpass, replset, verbose = verbose)
        0       occursin(r"^(prove|all)[\\:\\-\\ ]+", userinput) &&
        -         checkfeasible(inputpass, replset, countall=true, verbose = replcmdverbose & replverboseall)
        0       occursin(r"^any[\\:\\-\\ ]+", userinput) &&
        -         checkfeasible(inputpass, replset, countany=true, verbose = replcmdverbose & replverboseall)
        -       # push!(logicset, replset)
        -   catch er
        0       replthrow("\nWarning! Check Fail: $er")
        0       (length(userinput) == 5) && println("Nothing to check")
        -     end
        - end
        - 
